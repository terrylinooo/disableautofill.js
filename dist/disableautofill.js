(()=>{"use strict";var __webpack_modules__={"./src/core/event-adapter.js":
/*!***********************************!*\
  !*** ./src/core/event-adapter.js ***!
  \***********************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ EventAdapter)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n/**\n * Implement the adapter pattern to the native DOM event methods.\n * So we are able to make references on the events we created,\n * and remove them completely when we don\'t need them.\n *\n * Source: https://github.com/terrylinooo/sliderm.js/blob/master/src/core/events/event-adapter.js\n */\nvar EventAdapter = /*#__PURE__*/function () {\n  /**\n   * Constructor.\n   *\n   * @param {EventTarget} target\n   */\n  function EventAdapter(target) {\n    _classCallCheck(this, EventAdapter);\n    this.target = target;\n    this.events = {};\n  }\n\n  /**\n   * Add an event to a HTML element.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   */\n  _createClass(EventAdapter, [{\n    key: "on",\n    value: function on(event, handler) {\n      this.events[event] = handler;\n      this.target.addEventListener(event, this.events[event]);\n    }\n\n    /**\n     * Remove an event from a HTML element.\n     *\n     * @param {String} event\n     * @param {Function} handler\n     */\n  }, {\n    key: "off",\n    value: function off(event) {\n      this.target.removeEventListener(event, this.events[event]);\n    }\n\n    /**\n     * Dispatch an event on a HTML element.\n     *\n     * @param {String} event\n     */\n  }, {\n    key: "emit",\n    value: function emit(event) {\n      if (typeof this.events[event] !== \'undefined\') {\n        this.target.dispatchEvent(new Event(event));\n      }\n    }\n\n    /**\n     * As you see, destory everything.\n     */\n  }, {\n    key: "destory",\n    value: function destory() {\n      var events = Object.keys(this.events);\n      for (var i = 0; i < events.length; i += 1) {\n        this.off(events[i]);\n      }\n      delete this.events;\n    }\n\n    /**\n     * Mock to dispatch an event for current target.\n     *\n     * @param {String} event\n     * @param {Object} dispatchEvent\n     */\n  }, {\n    key: "mock",\n    value: function mock(event, dispatchEvent) {\n      if (typeof this.events[event] !== \'undefined\') {\n        this.events[event](dispatchEvent);\n      }\n    }\n  }]);\n  return EventAdapter;\n}();\n\n\n//# sourceURL=webpack://disableautofill/./src/core/event-adapter.js?')},"./src/core/handle.js":
/*!****************************!*\
  !*** ./src/core/handle.js ***!
  \****************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _randomizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./randomizer */ \"./src/core/randomizer.js\");\n/* harmony import */ var _states__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./states */ \"./src/core/states.js\");\n\n\n\n/**\n * Handle the DOM as it is triggered.\n *\n * @param {object} obj      The DOM element.\n * @param {object} event    The listening event.\n * @param {string} asterisk The asterisk symbol.\n * @param {string} action   The randomizer's action. Option: randomize, restore\n */\nvar handle = function handle(obj, event, asterisk, action) {\n  var tempValue = (0,_states__WEBPACK_IMPORTED_MODULE_1__.getState)('temp_value');\n  var length = (0,_states__WEBPACK_IMPORTED_MODULE_1__.getState)('length');\n  var originalValue = (0,_states__WEBPACK_IMPORTED_MODULE_1__.getState)('original_value');\n  var el = obj;\n  if (!el.id) {\n    // Create a random string for this DOM's id, if the id attribute does not exist.\n    el.id = Math.random().toString(36).substring(5);\n  }\n  if (!Object.prototype.hasOwnProperty.call(originalValue, el.id)) {\n    // Define an empty array for this random id string.\n    // Store the original value for restoring it later.\n    originalValue[el.id] = [];\n  }\n  var orig = originalValue[el.id];\n  tempValue[el.id] = el.value;\n  var temp = tempValue[el.id];\n  length[el.id] = temp.length;\n  var len = length[el.id];\n\n  // Get current keyup character position.\n  var currKeyupPos = el.selectionStart;\n  for (var i = 0; i < len; i += 1) {\n    if (temp[i] !== asterisk) {\n      orig[i] = temp[i];\n    }\n  }\n  if (len < orig.length) {\n    var diff = orig.length - len;\n    var key = event.keyCode || event.charCode;\n\n    // Check if last keypress was backspace or delete.\n    if (key === 8 || key === 46) {\n      orig.splice(currKeyupPos, diff);\n    } else {\n      // User highlighted and overwrote a portion of the password\n      orig.splice(currKeyupPos - 1, diff + 1);\n      orig.splice(currKeyupPos - 1, 0, temp[currKeyupPos - 1]);\n    }\n  }\n\n  // Mark password as asterrisk symbols.\n  el.value = temp.replace(/./g, asterisk);\n\n  // Let's randomize the name attribute, preventing Chrome from remembering filled data.\n  // We will restore the real data back when performing form submission.\n  var ran = new _randomizer__WEBPACK_IMPORTED_MODULE_0__[\"default\"](obj, orig);\n  if (action === 'randomize') {\n    ran.randomize();\n  } else if (action === 'restore') {\n    ran.restore();\n  }\n  (0,_states__WEBPACK_IMPORTED_MODULE_1__.updateState)('temp_value', tempValue);\n  (0,_states__WEBPACK_IMPORTED_MODULE_1__.updateState)('length', length);\n  (0,_states__WEBPACK_IMPORTED_MODULE_1__.updateState)('original_value', originalValue);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handle);\n\n//# sourceURL=webpack://disableautofill/./src/core/handle.js?")},"./src/core/listen.js":
/*!****************************!*\
  !*** ./src/core/listen.js ***!
  \****************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ listen)\n/* harmony export */ });\n/* harmony import */ var _handle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handle */ \"./src/core/handle.js\");\n/* harmony import */ var _event_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event-adapter */ \"./src/core/event-adapter.js\");\n\n\n\n/**\n * Event listener for password fields.\n * We'd like to hide the original password string with symbol characters.\n *\n * @param {string} selector The form's .class or #id\n * @param {array} fields A collecition of the DOMs' .class or #id\n * @param {string} asterisk The asterisk symbol. (option)\n * @param {function} callback Generally the form validator.\n */\nfunction listen(selector, fields, asterisk, callback) {\n  var form = document.querySelector(selector);\n  if (!form) {\n    return;\n  }\n  var event = new _event_adapter__WEBPACK_IMPORTED_MODULE_1__[\"default\"](form);\n  event.on('keyup', function (e) {\n    fields.forEach(function (field, i) {\n      var fieldDom = {};\n      fieldDom[i] = document.querySelector(field);\n      if (fieldDom[i]) {\n        (0,_handle__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(fieldDom[i], e, asterisk, 'randomize');\n      }\n    });\n  });\n  event.on('submit', function (e) {\n    e.preventDefault();\n    var restorePassword = new Promise(function (resolve, reject) {\n      fields.forEach(function (field, i) {\n        var fieldDom = {};\n        fieldDom[i] = document.querySelector(field);\n        if (fieldDom[i]) {\n          (0,_handle__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(fieldDom[i], e, asterisk, 'restore');\n          return resolve();\n        }\n        return reject();\n      });\n    });\n    restorePassword.then(function () {\n      if (typeof callback === 'function') {\n        if (callback(form)) {\n          form.submit();\n        }\n        return;\n      }\n      form.submit();\n    });\n  });\n}\n\n//# sourceURL=webpack://disableautofill/./src/core/listen.js?")},"./src/core/main.js":
/*!**************************!*\
  !*** ./src/core/main.js ***!
  \**************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ Main)\n/* harmony export */ });\n/* harmony import */ var _listen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./listen */ "./src/core/listen.js");\n/* harmony import */ var _states__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./states */ "./src/core/states.js");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n/**\n * This class is used as an initialization, defining the basic settings\n * and implementing the functionality of disabling autofill.\n */\nvar Main = /*#__PURE__*/function () {\n  function Main(form, setting) {\n    var _this = this;\n    _classCallCheck(this, Main);\n    // Default settings.\n    this.setting = {\n      fields: [],\n      asterisk: \'●\',\n      callback: null\n    };\n    this.form = form;\n    Object.keys(this.setting).forEach(function (key) {\n      if (typeof setting[key] !== \'undefined\') {\n        _this.setting[key] = setting[key];\n      }\n    });\n    (0,_states__WEBPACK_IMPORTED_MODULE_1__.initializeState)();\n  }\n  _createClass(Main, [{\n    key: "init",\n    value: function init() {\n      var fields = this.setting.fields;\n      var asterisk = this.setting.asterisk;\n      var callback = this.setting.callback;\n      (0,_listen__WEBPACK_IMPORTED_MODULE_0__["default"])(this.form, fields, asterisk, callback);\n    }\n  }]);\n  return Main;\n}();\n\n\n//# sourceURL=webpack://disableautofill/./src/core/main.js?')},"./src/core/randomizer.js":
/*!********************************!*\
  !*** ./src/core/randomizer.js ***!
  \********************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ Randomizer)\n/* harmony export */ });\n/* harmony import */ var _states__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./states */ "./src/core/states.js");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n/**\n * Randomize or recover the name attribute.\n */\nvar Randomizer = /*#__PURE__*/function () {\n  /**\n   * Constructor.\n   *\n   * @param {object} dom The DOM.\n   * @param {array} originalPassChars The original password.\n   */\n  function Randomizer(dom, originalPassChars) {\n    _classCallCheck(this, Randomizer);\n    this.dom = dom;\n    this.originalPassChars = originalPassChars;\n    this.originalNames = (0,_states__WEBPACK_IMPORTED_MODULE_0__.getState)(\'original_names\');\n    this.temporaryNames = (0,_states__WEBPACK_IMPORTED_MODULE_0__.getState)(\'temporary_names\');\n  }\n\n  /**\n   * ramdomize\n   *\n   * Add random chars on "name" attribute to avid Browser remember what you submitted before.\n   */\n  _createClass(Randomizer, [{\n    key: "randomize",\n    value: function randomize() {\n      var id = this.dom.id;\n      var randomName = Math.random().toString(36).replace(/[^a-z]+/g, \'\');\n      if (!this.originalNames[id]) {\n        this.originalNames[id] = this.dom.name;\n      }\n      if (this.temporaryNames[this.originalNames[id]]) {\n        this.dom.name = this.temporaryNames[this.originalNames[id]];\n      } else {\n        this.dom.name = randomName;\n        this.temporaryNames[this.originalNames[id]] = randomName;\n      }\n      (0,_states__WEBPACK_IMPORTED_MODULE_0__.updateState)(\'original_names\', this.originalNames);\n      (0,_states__WEBPACK_IMPORTED_MODULE_0__.updateState)(\'temporary_names\', this.temporaryNames);\n    }\n\n    /**\n     * resote\n     *\n     * Remove random chars on "name" attribute, so we can submit correct data then.\n     * Restore password from star signs to original input password.\n     */\n  }, {\n    key: "restore",\n    value: function restore() {\n      this.dom.name = this.originalNames[this.dom.id];\n      this.dom.value = this.originalPassChars.join(\'\');\n    }\n  }]);\n  return Randomizer;\n}();\n\n\n//# sourceURL=webpack://disableautofill/./src/core/randomizer.js?')},"./src/core/states.js":
/*!****************************!*\
  !*** ./src/core/states.js ***!
  \****************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "getState": () => (/* binding */ getState),\n/* harmony export */   "initializeState": () => (/* binding */ initializeState),\n/* harmony export */   "updateState": () => (/* binding */ updateState)\n/* harmony export */ });\nvar initializeState = function initializeState() {\n  if (typeof window.disableautofillstate === \'undefined\') {\n    window.disableautofillstate = {};\n  }\n};\nvar getState = function getState(type) {\n  if (typeof window.disableautofillstate[type] === \'undefined\') {\n    window.disableautofillstate[type] = {};\n  }\n  return window.disableautofillstate[type];\n};\nvar updateState = function updateState(type, data) {\n  window.disableautofillstate[type] = data;\n};\n\n//# sourceURL=webpack://disableautofill/./src/core/states.js?')},"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/main */ "./src/core/main.js");\n\nwindow.Disableautofill = _core_main__WEBPACK_IMPORTED_MODULE_0__["default"];\n\n//# sourceURL=webpack://disableautofill/./src/index.js?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/index.js")})();